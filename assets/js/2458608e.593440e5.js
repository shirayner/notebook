"use strict";(self.webpackChunkpnote=self.webpackChunkpnote||[]).push([[7277],{3905:(n,e,t)=>{t.d(e,{Zo:()=>m,kt:()=>g});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function u(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var o=r.createContext({}),s=function(n){var e=r.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):u(u({},e),n)),t},m=function(n){var e=s(n.components);return r.createElement(o.Provider,{value:e},n.children)},p="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,i=n.originalType,o=n.parentName,m=l(n,["components","mdxType","originalType","parentName"]),p=s(t),f=a,g=p["".concat(o,".").concat(f)]||p[f]||c[f]||i;return t?r.createElement(g,u(u({ref:e},m),{},{components:t})):r.createElement(g,u({ref:e},m))}));function g(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var i=t.length,u=new Array(i);u[0]=f;var l={};for(var o in e)hasOwnProperty.call(e,o)&&(l[o]=e[o]);l.originalType=n,l[p]="string"==typeof n?n:a,u[1]=l;for(var s=2;s<i;s++)u[s]=t[s];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9272:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>u,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const i={tags:["\u7b97\u6cd5"]},u="\u6570\u7ec4",l={unversionedId:"\u8ba1\u7b97\u673a\u57fa\u7840/\u7b97\u6cd5/\u94fe\u8868",id:"\u8ba1\u7b97\u673a\u57fa\u7840/\u7b97\u6cd5/\u94fe\u8868",title:"\u6570\u7ec4",description:"\u4e00\u3001\u54c8\u5e0c\u8868",source:"@site/docs/\u8ba1\u7b97\u673a\u57fa\u7840/02-\u7b97\u6cd5/03-\u94fe\u8868.mdx",sourceDirName:"\u8ba1\u7b97\u673a\u57fa\u7840/02-\u7b97\u6cd5",slug:"/\u8ba1\u7b97\u673a\u57fa\u7840/\u7b97\u6cd5/\u94fe\u8868",permalink:"/notebook/docs/\u8ba1\u7b97\u673a\u57fa\u7840/\u7b97\u6cd5/\u94fe\u8868",draft:!1,editUrl:"https://github.com/shirayner/notebook/tree/master/docs/\u8ba1\u7b97\u673a\u57fa\u7840/02-\u7b97\u6cd5/03-\u94fe\u8868.mdx",tags:[{label:"\u7b97\u6cd5",permalink:"/notebook/docs/tags/\u7b97\u6cd5"}],version:"current",sidebarPosition:3,frontMatter:{tags:["\u7b97\u6cd5"]},sidebar:"computerSidebar",previous:{title:"\u6570\u7ec4",permalink:"/notebook/docs/\u8ba1\u7b97\u673a\u57fa\u7840/\u7b97\u6cd5/\u6570\u7ec4"}},o={},s=[{value:"\u4e00\u3001\u54c8\u5e0c\u8868",id:"\u4e00\u54c8\u5e0c\u8868",level:2},{value:"\u30101\u3011\u4e24\u6570\u4e4b\u548c",id:"1\u4e24\u6570\u4e4b\u548c",level:3},{value:"\u3010454\u3011\u56db\u6570\u76f8\u52a0 II",id:"454\u56db\u6570\u76f8\u52a0-ii",level:3},{value:"\u3010169\u3011 \u591a\u6570\u5143\u7d20",id:"169-\u591a\u6570\u5143\u7d20",level:3},{value:"\u3010448\u3011 \u627e\u5230\u6240\u6709\u6570\u7ec4\u4e2d\u6d88\u5931\u7684\u6570\u5b57",id:"448-\u627e\u5230\u6240\u6709\u6570\u7ec4\u4e2d\u6d88\u5931\u7684\u6570\u5b57",level:3},{value:"\u3010128\u3011 \u6700\u957f\u8fde\u7eed\u5e8f\u5217",id:"128-\u6700\u957f\u8fde\u7eed\u5e8f\u5217",level:3}],m={toc:s},p="wrapper";function c(n){let{components:e,...t}=n;return(0,a.kt)(p,(0,r.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u6570\u7ec4"},"\u6570\u7ec4"),(0,a.kt)("h2",{id:"\u4e00\u54c8\u5e0c\u8868"},"\u4e00\u3001\u54c8\u5e0c\u8868"),(0,a.kt)("p",null,"\u6ce8\u610f\u4e00\u79cd\u7279\u6b8a\u7684\u54c8\u5e0c\u8868\uff1a\u539f\u5730\u54c8\u5e0c"),(0,a.kt)("h3",{id:"1\u4e24\u6570\u4e4b\u548c"},(0,a.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/two-sum/"},"\u30101\u3011\u4e24\u6570\u4e4b\u548c")),(0,a.kt)("p",null,"\u65b9\u6cd5\uff1a\u54c8\u5e0c\u8868"),(0,a.kt)("p",null,"\u9898\u89e3\uff1a\u5b98\u65b9\u9898\u89e3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        Map<Integer, Integer> hashtable = new HashMap<Integer, Integer>();\n        // \u904d\u5386\u6570\u7ec4 nums\n        for (int i = 0; i < nums.length; ++i) {\n            // \u5224\u65ad\u662f\u5426\u5728\u54c8\u5e0c\u8868\u4e2d\n            if (hashtable.containsKey(target - nums[i])) {\n                return new int[]{hashtable.get(target - nums[i]), i};\n            }\n            // \u5c06target - num[i] \u653e\u5165\u54c8\u5e0c\u8868\n            hashtable.put(nums[i], i);\n        }\n        return new int[0];\n    }\n}\n")),(0,a.kt)("h3",{id:"454\u56db\u6570\u76f8\u52a0-ii"},(0,a.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/4sum-ii/"},"\u3010454\u3011\u56db\u6570\u76f8\u52a0 II")),(0,a.kt)("p",null,"\u65b9\u6cd5\uff1a\u5206\u7ec4 + \u54c8\u5e0c\u8868"),(0,a.kt)("p",null,"\u601d\u8def\uff1a"),(0,a.kt)("blockquote",null,(0,a.kt)("ul",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ul"},"\u5c06\u56db\u4e2a\u6570\u7ec4\u5206\u6210\u4e24\u7ec4\uff1aA \u548c B\u4e00\u7ec4\uff0c C\u548cD\u4e00\u7ec4\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u4e8c\u91cd\u5faa\u73af\u904d\u5386 A \u548c B\uff0c\u6765\u6784\u5efa\u54c8\u5e0c\u8868\uff1a(s,n) \uff0c s = ",(0,a.kt)("em",{parentName:"li"},"A"),"[",(0,a.kt)("em",{parentName:"li"},"i"),"]","+",(0,a.kt)("em",{parentName:"li"},"B"),"[",(0,a.kt)("em",{parentName:"li"},"j"),"]"," \uff0cn \u4e3a s \u51fa\u73b0\u7684\u6b21\u6570"),(0,a.kt)("li",{parentName:"ul"},"\u4e8c\u91cd\u5faa\u73af\u904d\u5386 C \u548c D\uff0c\u5e76\u5224\u65ad -t \u662f\u5426\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c t =  ",(0,a.kt)("em",{parentName:"li"},"C"),"[",(0,a.kt)("em",{parentName:"li"},"k"),"]","+",(0,a.kt)("em",{parentName:"li"},"D"),"[",(0,a.kt)("em",{parentName:"li"},"l"),"]"))),(0,a.kt)("p",null,"\u62d3\u5c55\uff1a\u5bf9\u4e8en\u5143\u7ec4 A+B....+N=0 \u7684\u9898\u76ee\uff0c\u53ef\u8003\u8651\u4e0a\u9762\u7684\u5206\u7ec4\u8ba1\u7b97\u7684\u65b9\u6cd5"),(0,a.kt)("p",null,"\u9898\u89e3\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    public int fourSumCount(int[] A, int[] B, int[] C, int[] D) {\n        Map<Integer, Integer> countAB = new HashMap<Integer, Integer>();\n        for (int u : A) {\n            for (int v : B) {\n                countAB.put(u + v, countAB.getOrDefault(u + v, 0) + 1);\n            }\n        }\n        int ans = 0;\n        for (int u : C) {\n            for (int v : D) {\n                if (countAB.containsKey(-u - v)) {\n                    ans += countAB.get(-u - v);\n                }\n            }\n        }\n        return ans;\n    }\n}\n")),(0,a.kt)("h3",{id:"169-\u591a\u6570\u5143\u7d20"},(0,a.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/majority-element/"},"\u3010169\u3011 \u591a\u6570\u5143\u7d20")),(0,a.kt)("p",null,"\u65b9\u6cd5\uff1a\u54c8\u5e0c\u8868\u3001\u6392\u5e8f\u6cd5\u3001\u6469\u5c14\u6295\u7968\u6cd5"),(0,a.kt)("p",null,"\u601d\u8def\uff1a\u76f4\u63a5\u4f7f\u7528 \u54c8\u5e0c\u8868\u8ba1\u6570"),(0,a.kt)("p",null,"\u9898\u89e3\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n\n    public int majorityElement(int[] nums) {\n        // init count map\n        Map<Integer, Integer> countMap = new HashMap<>();\n        for (int num : nums) {\n            Integer count = countMap.get(num);\n            if (count == null) {\n                count = 0;\n            }\n            countMap.put(num, ++count);\n        }\n\n        // find majority element from count map\n        for (Map.Entry<Integer, Integer> entry : countMap.entrySet()) {\n            if (entry.getValue() > nums.length / 2) {\n                return entry.getKey();\n            }\n        }\n        return -1;\n    }\n\n}\n")),(0,a.kt)("h3",{id:"448-\u627e\u5230\u6240\u6709\u6570\u7ec4\u4e2d\u6d88\u5931\u7684\u6570\u5b57"},(0,a.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/find-all-numbers-disappeared-in-an-array/"},"\u3010448\u3011 \u627e\u5230\u6240\u6709\u6570\u7ec4\u4e2d\u6d88\u5931\u7684\u6570\u5b57")),(0,a.kt)("p",null,"\u65b9\u6cd5\uff1a\u539f\u5730\u54c8\u5e0c"),(0,a.kt)("p",null,"\u601d\u8def\uff1a\u53ef\u8054\u60f3\u5230  ","[\u3010287\u3011 \u5bfb\u627e\u91cd\u590d\u6570]","(#","[287]"," \u5bfb\u627e\u91cd\u590d\u6570)"),(0,a.kt)("p",null,"\u9898\u89e3\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n\n    /**\n     * \u65b9\u6cd5\u4e00\uff1a\u539f\u5730\u54c8\u5e0c\n     * \u56e0\u4e3a\u6570\u5b57\u8303\u56f4\u4e3a [1,n] ,\u5e76\u4e14\u6709\u91cd\u590d\u6570\u5b57\uff0c\u800c\u4e14\u8fd9\u4e9b\u91cd\u590d\u6570\u5b57\u8fd8\u5360\u4e86\u7f3a\u5931\u6570\u5b57\u7684\u5751\uff0c\n     * \u6240\u4ee5\u6211\u4eec\u5c06\u6bcf\u4e2a\u6570\u5b57\u653e\u56de\u5230\u6b63\u786e\u4f4d\u7f6e\u4e0a\u540e\uff0c\u5269\u4e0b\u7684\u91cd\u590d\u6570\u5b57\u6240\u5360\u7684\u4f4d\u7f6e\u5373\u4e3a\u7f3a\u5931\u7684\u6570\u5b57\uff0c\n     * \u5177\u4f53\u505a\u6cd5\u4e3a\uff1a\u5c06\u6bcf\u4e2a\u6570\u5b57 nums[i] \u653e\u56de\u5230 i-1 \u7684\u4f4d\u7f6e\u5904\uff0c\u5e76\u5c06\u91cd\u590d\u6570\u5b57\u7f6e\u4e3a-1\uff0c\u6700\u540e-1\u5b58\u5728\u7684\u4f4d\u7f6e\u5373\u4e3a\u7f3a\u5931\u7684\u4f4d\u7f6e\n     *\n     * @param nums nums\n     * @return res\n     */\n    public List<Integer> findDisappearedNumbers(int[] nums) {\n        int size = nums.length;\n        for (int i = 0; i < size; i++) {\n            while ((nums[i] - 1) != i && nums[i] != -1) {\n                if (nums[i] == nums[nums[i] - 1]) {\n                    nums[i] = -1;\n                } else {\n                    swap(nums, i, nums[i] - 1);\n                }\n            }\n        }\n\n        List<Integer> ans = new ArrayList<>();\n        for (int i = 0; i < size; i++) {\n            if (nums[i] == -1) {\n                ans.add(i + 1);\n            }\n        }\n\n        return ans;\n\n    }\n\n    private void swap(int[] nums, int i, int j) {\n        int temp = nums[i];\n        nums[i] = nums[j];\n        nums[j] = temp;\n    }\n\n}\n\n")),(0,a.kt)("h3",{id:"128-\u6700\u957f\u8fde\u7eed\u5e8f\u5217"},(0,a.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/longest-consecutive-sequence/"},"\u3010128\u3011 \u6700\u957f\u8fde\u7eed\u5e8f\u5217")),(0,a.kt)("p",null,"\u65b9\u6cd5\uff1a\u54c8\u5e0c\u8868"),(0,a.kt)("p",null,"\u601d\u8def\uff1a\u4f7f\u7528\u54c8\u5e0c\u8868\u6765\u5b58\u50a8\u6240\u6709\u503c\uff0c\u8fd9\u6837\u5224\u65ad\u67d0\u4e2a\u6570\u662f\u5426\u5b58\u5728\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)"),(0,a.kt)("p",null,"\u9898\u89e3\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * 128. \u6700\u957f\u8fde\u7eed\u5e8f\u5217\n *\n * @author r.shi 2021/5/21 17:12\n */\nclass Solution {\n    public int longestConsecutive(int[] nums) {\n        Set<Integer> numSet = new HashSet<>();\n        for (int num : nums) {\n            numSet.add(num);\n        }\n\n        int maxLength = 0;\n        for (int num : numSet) {\n            if (numSet.contains(num - 1)) {\n                continue;\n            }\n\n            int tempLength = 0;\n            while (numSet.contains(num)) {\n                tempLength++;\n                num++;\n            }\n\n            maxLength = Math.max(maxLength, tempLength);\n        }\n\n        return maxLength;\n    }\n}\n")))}c.isMDXComponent=!0}}]);